{
  "name": "Go Development Container",
  "image": "mcr.microsoft.com/devcontainers/go:1.24",
  
  // Features to add to the dev container
  "features": {
    "ghcr.io/devcontainers/features/git:1": {},
    "ghcr.io/devcontainers/features/github-cli:1": {},
    "ghcr.io/devcontainers/features/docker-in-docker:2": {},
    "ghcr.io/devcontainers/features/common-utils:2": {
      "installZsh": true,
      "installOhMyZsh": true,
      "upgradePackages": true,
      "username": "vscode"
    }
  },

  // Configure tool-specific properties
  "customizations": {
    "vscode": {
      "extensions": [
        "golang.Go",
        "ms-vscode.vscode-json",
        "redhat.vscode-yaml",
        "ms-azuretools.vscode-docker",
        "ms-vscode.makefile-tools",
        "github.copilot",
        "github.copilot-chat",
        "eamodio.gitlens",
        "ms-vscode.hexeditor"
      ],
      "settings": {
        "go.toolsManagement.checkForUpdates": "local",
        "go.useLanguageServer": true,
        "go.gopath": "/go",
        "go.goroot": "/usr/local/go",
        "go.lintTool": "golangci-lint",
        "go.lintFlags": [
          "--fast"
        ],
        "go.formatTool": "goimports",
        "go.testFlags": ["-v", "-race"],
        "go.buildTags": "",
        "go.testTimeout": "30s",
        "go.coverOnSave": false,
        "go.coverOnSingleTest": true,
        "go.coverOnTestPackage": true,
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.organizeImports": "explicit"
        },
        "files.eol": "\n",
        "terminal.integrated.defaultProfile.linux": "zsh",
        "terminal.integrated.profiles.linux": {
          "zsh": {
            "path": "/bin/zsh"
          }
        }
      }
    }
  },

  // Use 'forwardPorts' to make a list of ports inside the container available locally
  "forwardPorts": [8080, 2345],

  // Use 'postCreateCommand' to run commands after the container is created
  "postCreateCommand": "go mod download && go install -a std && go install github.com/air-verse/air@latest && go install github.com/go-delve/delve/cmd/dlv@latest && go install golang.org/x/tools/cmd/goimports@latest && go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest",

  // Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root
  "remoteUser": "vscode",

  // Configure container environment
  "containerEnv": {
    "GO111MODULE": "on",
    "GOPROXY": "https://proxy.golang.org",
    "GOSUMDB": "sum.golang.org"
  },

  // Mount the project workspace
  "workspaceFolder": "/workspace",
  "mounts": [
    "source=${localWorkspaceFolder},target=/workspace,type=bind,consistency=cached"
  ],

  // Development specific configuration
  "runArgs": [
    "--init"
  ],

  // Lifecycle scripts
  "initializeCommand": "echo 'Initializing dev container...'",
  "onCreateCommand": "echo 'Dev container created successfully!'",
  "updateContentCommand": "go mod tidy",
  "postStartCommand": "git config --global --add safe.directory /workspace"
}
